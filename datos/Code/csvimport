

CREATE OR REPLACE FUNCTION privacy_data.csv_dynamic_copy(
    _file text,
    _tbl text DEFAULT 'tmp1'::text)
  RETURNS text AS
$BODY$
DECLARE
   row_ct int;
BEGIN
   -- create staging table for 1st row as single text column 
   CREATE TEMP TABLE tmp0(cols text) ON COMMIT DROP;

   -- fetch 1st row
   EXECUTE format($$COPY tmp0 FROM PROGRAM 'head -n1 %I' WITH (DELIMITER %L)$$ , _file, E'\t');

   -- create actual temp table with all columns text
   EXECUTE (
      SELECT format('CREATE TEMP TABLE %I(', _tbl)
          || string_agg(quote_ident(col) || ' text', ',')
          || ')'
      FROM  (SELECT cols FROM tmp0 LIMIT 1) t
           , unnest(string_to_array(t.cols, ',')) col
      );

   -- Import data
   EXECUTE format($$COPY %I FROM %L WITH (FORMAT csv, HEADER, NULL '\N', DELIMITER %L)$$
                , _tbl, _file, ',');

   GET DIAGNOSTICS row_ct = ROW_COUNT;
   RETURN format('%I with %s rows.', _tbl, row_ct);
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
